{"version":3,"sources":["nesweb/FrameTimer.js","nesweb/Screen.js","nesweb/KeyboardController.js","nesweb/Speakers.js","nesweb/Emulator.js","GameRoms.tsx","GameController.tsx","App.tsx","index.tsx"],"names":["FrameTimer","props","onAnimationFrame","time","requestAnimationFrame","excess","interval","newFrameTime","lastFrameTime","numFrames","Math","round","generateFrame","onWriteFrame","timeToNextFrame","i","setTimeout","this","onGenerateFrame","bind","running","_requestID","window","cancelAnimationFrame","Screen","Controller","BUTTON_A","BUTTON_B","BUTTON_SELECT","BUTTON_START","BUTTON_UP","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT","setBuffer","buffer","y","x","buf32","writeBuffer","imageData","data","set","buf8","context","putImageData","fitInParent","parent","canvas","parentNode","parentWidth","clientWidth","parentHeight","clientHeight","style","width","height","handleMouseDown","e","onMouseDown","scale","parseFloat","rect","getBoundingClientRect","clientX","left","clientY","top","className","onMouseUp","ref","initCanvas","getContext","getImageData","fillStyle","fillRect","buf","ArrayBuffer","length","Uint8ClampedArray","Uint32Array","img","Image","src","toDataURL","Component","handleError","Speakers","onBufferUnderrun","onaudioprocess","outputBuffer","getChannelData","right","size","samples","deqN","bufferSize","console","log","j","RingBuffer","audioCtx","sampleRate","AudioContext","webkitAudioContext","audioContext","scriptNode","createScriptProcessor","connect","destination","disconnect","close","catch","enq","Emulator","start","frameTimer","speakers","stop","clearInterval","fpsInterval","screen","nes","frame","zapperMove","zapperFireDown","zapperFireUp","k","buttonDown","buttonUp","actualSize","desiredSize","paused","NES","onFrame","onStatusUpdate","onAudioSample","writeSample","getSampleRate","loadROM","romData","document","removeEventListener","keyboardController","handleKeyDown","handleKeyUp","handleKeyPress","gamepadPolling","undefined","prevProps","NESGames","name","url","ControllerKeys","DirectionStatus","RetriveButtonKeysByStatus","status","keys","TOP","LEFT","BOTTOM","RIGHT","LEFT_TOP","LEFT_BOTTOM","RIGHT_TOP","RIGHT_BOTTOM","LeftController","stick","state","currentstatus","React","createRef","ev","touch","targetTouches","current","dispatchTouchEvent","pageX","pageY","preventDefault","currentStatus","forEach","onkeyUp","setState","NONE","touchPoint","midX","midY","bottom","nextStatus","changeControllerDirection","direction","newKeys","indexOf","onKeyDown","container","getElementById","addEventListener","handleTouchStart","handleTouchMove","handleTouchEnd","id","onClick","RightController","buttonA","buttonB","buttonC","keysForStatus","point","rectA","rectB","rectC","rectContainsPoint","s","justifyContent","KeyboardMap","GameList","target","getAttribute","onselect","resume","map","game","key","data-key","App","useState","setRomData","setUrl","emulator","useRef","useEffect","path","callback","handleProgress","req","XMLHttpRequest","open","overrideMimeType","onload","responseText","match","Error","statusText","onerror","onprogress","loaded","total","send","loadBinary","progress","ReactDOM","render","StrictMode","onkeydown","keyCode","onkeyup"],"mappings":"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","file":"static/js/main.7dc1aa16.chunk.js","sourcesContent":["/*\n * @Author: your name\n * @Date: 2020-07-15 19:16:44\n * @LastEditTime: 2020-07-15 21:12:43\n * @LastEditors: your name\n * @Description: In User Settings Edit\n * @FilePath: /gameboys/src/nesweb/FrameTimer.js\n */ \nconst FPS = 60.098;\n\nexport default class FrameTimer {\n  constructor(props) {\n    // Run at 60 FPS\n    this.onGenerateFrame = props.onGenerateFrame;\n    // Run on animation frame\n    this.onWriteFrame = props.onWriteFrame;\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n    this.running = true;\n    this.interval = 1e3 / FPS;\n    this.lastFrameTime = false;\n  }\n\n  start() {\n    this.running = true;\n    this.requestAnimationFrame();\n  }\n\n  stop() {\n    this.running = false;\n    if (this._requestID) window.cancelAnimationFrame(this._requestID);\n    this.lastFrameTime = false;\n  }\n\n  requestAnimationFrame() {\n    this._requestID = window.requestAnimationFrame(this.onAnimationFrame);\n  }\n\n  generateFrame() {\n    this.onGenerateFrame();\n    this.lastFrameTime += this.interval;\n  }\n\n  onAnimationFrame = time => {\n    this.requestAnimationFrame();\n    // how many ms after 60fps frame time\n    let excess = time % this.interval;\n\n    // newFrameTime is the current time aligned to 60fps intervals.\n    // i.e. 16.6, 33.3, etc ...\n    let newFrameTime = time - excess;\n\n    // first frame, do nothing\n    if (!this.lastFrameTime) {\n      this.lastFrameTime = newFrameTime;\n      return;\n    }\n\n    let numFrames = Math.round(\n      (newFrameTime - this.lastFrameTime) / this.interval\n    );\n\n    // This can happen a lot on a 144Hz display\n    if (numFrames === 0) {\n      //console.log(\"WOAH, no frames\");\n      return;\n    }\n\n    // update display on first frame only\n    this.generateFrame();\n    this.onWriteFrame();\n\n    // we generate additional frames evenly before the next\n    // onAnimationFrame call.\n    // additional frames are generated but not displayed\n    // until next frame draw\n    let timeToNextFrame = this.interval - excess;\n    for (let i = 1; i < numFrames; i++) {\n      setTimeout(() => {\n        this.generateFrame();\n      }, (i * timeToNextFrame) / numFrames);\n    }\n    // if (numFrames > 1) console.log(\"SKIP\", numFrames - 1, this.lastFrameTime);\n  };\n}\n","import React, { Component } from \"react\";\nimport \"./Screen.css\";\n\nconst SCREEN_WIDTH = 256;\nconst SCREEN_HEIGHT = 240;\n\nclass Screen extends Component {\n  render() {\n    return (\n      <canvas\n        className=\"Screen\"\n        width={SCREEN_WIDTH}\n        height={SCREEN_HEIGHT}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.props.onMouseUp}\n        ref={canvas => {\n          this.canvas = canvas;\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n  }\n\n  componentDidUpdate() {\n    this.initCanvas();\n  }\n\n  initCanvas() {\n    this.context = this.canvas.getContext(\"2d\");\n    this.imageData = this.context.getImageData(\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT\n    );\n\n    this.context.fillStyle = \"black\";\n    // set alpha to opaque\n    this.context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n\n    // buffer to write on next animation frame\n    this.buf = new ArrayBuffer(this.imageData.data.length);\n    // Get the canvas buffer in 8bit and 32bit\n    this.buf8 = new Uint8ClampedArray(this.buf);\n    this.buf32 = new Uint32Array(this.buf);\n\n    // Set alpha\n    for (var i = 0; i < this.buf32.length; ++i) {\n      this.buf32[i] = 0xff000000;\n    }\n  }\n\n  setBuffer = buffer => {\n    var i = 0;\n    for (var y = 0; y < SCREEN_HEIGHT; ++y) {\n      for (var x = 0; x < SCREEN_WIDTH; ++x) {\n        i = y * 256 + x;\n        // Convert pixel from NES BGR to canvas ABGR\n        this.buf32[i] = 0xff000000 | buffer[i]; // Full alpha\n      }\n    }\n  };\n\n  writeBuffer = () => {\n    this.imageData.data.set(this.buf8);\n    this.context.putImageData(this.imageData, 0, 0);\n  };\n\n  fitInParent = () => {\n    let parent = this.canvas.parentNode;\n    // @ts-ignore\n    let parentWidth = parent.clientWidth;\n    // @ts-ignore\n    let parentHeight = parent.clientHeight;\n    let parentRatio = parentWidth / parentHeight;\n    let desiredRatio = SCREEN_WIDTH / SCREEN_HEIGHT;\n    if (desiredRatio < parentRatio) {\n      this.canvas.style.width = `${Math.round(parentHeight * desiredRatio)}px`;\n      this.canvas.style.height = `${parentHeight}px`;\n    } else {\n      this.canvas.style.width = `${parentWidth}px`;\n      this.canvas.style.height = `${Math.round(parentWidth / desiredRatio)}px`;\n    }\n  };\n\n  screenshot() {\n    var img = new Image();\n    img.src = this.canvas.toDataURL(\"image/png\");\n    return img;\n  }\n\n  handleMouseDown = e => {\n    if (!this.props.onMouseDown) return;\n    // Make coordinates unscaled\n    let scale = SCREEN_WIDTH / parseFloat(this.canvas.style.width);\n    let rect = this.canvas.getBoundingClientRect();\n    let x = Math.round((e.clientX - rect.left) * scale);\n    let y = Math.round((e.clientY - rect.top) * scale);\n    this.props.onMouseDown(x, y);\n  };\n}\n\nexport default Screen;\n","import { Controller } from \"jsnes\";\n\n// Mapping keyboard code to [controller, button]\nconst KEYS = {\n  88: [1, Controller.BUTTON_A, \"X\"], // X\n  89: [1, Controller.BUTTON_B, \"Y\"], // Y (Central European keyboard)\n  90: [1, Controller.BUTTON_B, \"Z\"], // Z\n  17: [1, Controller.BUTTON_SELECT, \"Right Ctrl\"], // Right Ctrl\n  13: [1, Controller.BUTTON_START, \"Enter\"], // Enter\n  38: [1, Controller.BUTTON_UP, \"Up\"], // Up\n  40: [1, Controller.BUTTON_DOWN, \"Down\"], // Down\n  37: [1, Controller.BUTTON_LEFT, \"Left\"], // Left\n  39: [1, Controller.BUTTON_RIGHT, \"Right\"], // Right\n  103: [2, Controller.BUTTON_A, \"Num-7\"], // Num-7\n  105: [2, Controller.BUTTON_B, \"Num-9\"], // Num-9\n  99: [2, Controller.BUTTON_SELECT, \"Num-3\"], // Num-3\n  97: [2, Controller.BUTTON_START, \"Num-1\"], // Num-1\n  104: [2, Controller.BUTTON_UP, \"Num-8\"], // Num-8\n  98: [2, Controller.BUTTON_DOWN, \"Num-2\"], // Num-2\n  100: [2, Controller.BUTTON_LEFT, \"Num-4\"], // Num-4\n  102: [2, Controller.BUTTON_RIGHT, \"Num-6\"] // Num-6\n};\n\nexport default class KeyboardController {\n  constructor(options) {\n    this.onButtonDown = options.onButtonDown;\n    this.onButtonUp = options.onButtonUp;\n  }\n\n  loadKeys = () => {\n    var keys;\n    try {\n      keys = localStorage.getItem(\"keys\");\n      if (keys) {\n        keys = JSON.parse(keys);\n      }\n    } catch (e) {\n      console.log(\"Failed to get keys from localStorage.\", e);\n    }\n\n    this.keys = keys || KEYS;\n  };\n\n  setKeys = newKeys => {\n    try {\n      localStorage.setItem(\"keys\", JSON.stringify(newKeys));\n      this.keys = newKeys;\n    } catch (e) {\n      console.log(\"Failed to set keys in localStorage\");\n    }\n  };\n\n  handleKeyDown = e => {\n    var key = this.keys[e.keyCode];\n    if (key) {\n      this.onButtonDown(key[0], key[1]);\n      e.preventDefault();\n    }\n  };\n\n  handleKeyUp = e => {\n    var key = this.keys[e.keyCode];\n    if (key) {\n      this.onButtonUp(key[0], key[1]);\n      e.preventDefault();\n    }\n  };\n\n  handleKeyPress = e => {\n    e.preventDefault();\n  };\n}\n","/*\n * @Author: your name\n * @Date: 2020-07-15 19:16:44\n * @LastEditTime: 2020-07-15 23:04:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /gameboys/src/nesweb/Speakers.js\n */ \nimport RingBuffer from \"ringbufferjs\";\n// import { handleError } from \"./utils\";\nconst handleError = e => {};\n\nexport default class Speakers {\n  constructor({ onBufferUnderrun }) {\n    this.onBufferUnderrun = onBufferUnderrun;\n    this.bufferSize = 8192;\n    this.buffer = new RingBuffer(this.bufferSize * 2);\n  }\n\n  getSampleRate() {\n    if (!this.audioCtx) {\n      return 44100;\n    }\n    return this.audioCtx.sampleRate;\n  }\n\n  start() {\n    // Audio is not supported\n    var AudioContext = window.AudioContext || window.webkitAudioContext;\n    if (!AudioContext) {\n      console.log('audio context not support');\n      return;\n    }\n    this.audioCtx = window.audioContext;\n    this.scriptNode = this.audioCtx.createScriptProcessor(1024, 0, 2);\n    this.scriptNode.onaudioprocess = this.onaudioprocess;\n    this.scriptNode.connect(this.audioCtx.destination);\n  }\n\n  stop() {\n    if (this.scriptNode) {\n      this.scriptNode.disconnect(this.audioCtx.destination);\n      this.scriptNode.onaudioprocess = null;\n      this.scriptNode = null;\n    }\n    if (this.audioCtx) {\n      this.audioCtx.close().catch(handleError);\n      this.audioCtx = null;\n    }\n  }\n\n  writeSample(left, right) {\n    if (this.buffer.size() / 2 >= this.bufferSize) {\n      // console.log(`Buffer overrun`);\n      this.buffer.deqN(this.bufferSize / 2);\n    }\n    this.buffer.enq(left);\n    this.buffer.enq(right);\n  };\n\n  onaudioprocess = e => {\n    var left = e.outputBuffer.getChannelData(0);\n    var right = e.outputBuffer.getChannelData(1);\n    var size = left.length;\n\n    // We're going to buffer underrun. Attempt to fill the buffer.\n    if (this.buffer.size() < size * 2 && this.onBufferUnderrun) {\n      this.onBufferUnderrun(this.buffer.size(), size * 2);\n    }\n\n    try {\n      var samples = this.buffer.deqN(size * 2);\n    } catch (e) {\n      // onBufferUnderrun failed to fill the buffer, so handle a real buffer\n      // underrun\n\n      // ignore empty buffers... assume audio has just stopped\n      var bufferSize = this.buffer.size() / 2;\n      if (bufferSize > 0) {\n        console.log(`Buffer underrun (needed ${size}, got ${bufferSize})`);\n      }\n      for (var j = 0; j < size; j++) {\n        left[j] = 0;\n        right[j] = 0;\n      }\n      return;\n    }\n    for (var i = 0; i < size; i++) {\n      left[i] = samples[i * 2];\n      right[i] = samples[i * 2 + 1];\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NES } from \"jsnes\";\n\nimport FrameTimer from \"./FrameTimer\";\nimport GamepadController from \"./GamepadController\";\nimport KeyboardController from \"./KeyboardController\";\nimport Screen from \"./Screen\";\nimport Speakers from \"./Speakers\";\n\n/*\n * Runs the emulator.\n *\n * The only UI is a canvas element. It assumes it is a singleton in various ways\n * (binds to window, keyboard, speakers, etc).\n */\nclass Emulator extends Component {\n  render() {\n    return (\n      <Screen\n        ref={screen => {\n          this.screen = screen;\n        }}\n        onGenerateFrame={() => {\n          this.nes.frame();\n        }}\n        onMouseDown={(x, y) => {\n          this.nes.zapperMove(x, y);\n          this.nes.zapperFireDown();\n        }}\n        onMouseUp={() => {\n          this.nes.zapperFireUp();\n        }}\n      />\n    );\n  }\n\n  onKeydown(k) {\n    this.nes.buttonDown(1, k);\n  }\n\n  onKeyup(k) {\n    this.nes.buttonUp(1, k);\n  }\n\n  componentDidMount() {\n    // Initial layout\n    this.fitInParent();\n\n    this.speakers = new Speakers({\n      onBufferUnderrun: (actualSize, desiredSize) => {\n        if (this.props.paused) {\n          return;\n        }\n        // Skip a video frame so audio remains consistent. This happens for\n        // a variety of reasons:\n        // - Frame rate is not quite 60fps, so sometimes buffer empties\n        // - Page is not visible, so requestAnimationFrame doesn't get fired.\n        //   In this case emulator still runs at full speed, but timing is\n        //   done by audio instead of requestAnimationFrame.\n        // - System can't run emulator at full speed. In this case it'll stop\n        //    firing requestAnimationFrame.\n        // console.log(\n        //   \"Buffer underrun, running another frame to try and catch up\"\n        // );\n\n        this.frameTimer.generateFrame();\n        // desiredSize will be 2048, and the NES produces 1468 samples on each\n        // frame so we might need a second frame to be run. Give up after that\n        // though -- the system is not catching up\n        if (this.speakers.buffer.size() < desiredSize) {\n          // console.log(\"Still buffer underrun, running a second frame\");\n          this.frameTimer.generateFrame();\n        }\n      }\n    });\n\n    this.nes = new NES({\n      onFrame: this.screen.setBuffer,\n      onStatusUpdate: console.log,\n      onAudioSample: this.speakers.writeSample.bind(this.speakers),\n      sampleRate: this.speakers.getSampleRate()\n    });\n\n    // For debugging. ([\"nes\"] instead of .nes to avoid VS Code type errors.)\n    window[\"nes\"] = this.nes;\n\n    this.frameTimer = new FrameTimer({\n      onGenerateFrame: this.nes.frame,\n      onWriteFrame: this.screen.writeBuffer\n    });\n\n    // Set up gamepad and keyboard\n    // this.gamepadController = new GamepadController({\n    //   onButtonDown: this.nes.buttonDown,\n    //   onButtonUp: this.nes.buttonUp\n    // });\n\n    // this.gamepadController.loadGamepadConfig();\n    // this.gamepadPolling = this.gamepadController.startPolling();\n\n    // this.keyboardController = new KeyboardController({\n    //   onButtonDown: this.gamepadController.disableIfGamepadEnabled(\n    //     this.nes.buttonDown\n    //   ),\n    //   onButtonUp: this.gamepadController.disableIfGamepadEnabled(\n    //     this.nes.buttonUp\n    //   )\n    // });\n\n    // Load keys from localStorage (if they exist)\n    // this.keyboardController.loadKeys();\n\n    // document.addEventListener(\"keydown\", this.keyboardController.handleKeyDown);\n    // document.addEventListener(\"keyup\", this.keyboardController.handleKeyUp);\n    // document.addEventListener(\n    //   \"keypress\",\n    //   this.keyboardController.handleKeyPress\n    // );\n\n    this.nes.loadROM(this.props.romData);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n\n    // Unbind keyboard\n    document.removeEventListener(\n      \"keydown\",\n      this.keyboardController.handleKeyDown\n    );\n    document.removeEventListener(\"keyup\", this.keyboardController.handleKeyUp);\n    document.removeEventListener(\n      \"keypress\",\n      this.keyboardController.handleKeyPress\n    );\n\n    // Stop gamepad\n    this.gamepadPolling.stop();\n\n    window[\"nes\"] = undefined;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.paused !== prevProps.paused) {\n      if (this.props.paused) {\n        this.stop();\n      } else {\n        this.start();\n      }\n    }\n\n    // TODO: handle changing romData\n  }\n\n  start = () => {\n    this.frameTimer.start();\n    this.speakers.start();\n    // this.fpsInterval = setInterval(() => {\n    //   // console.log(`FPS: ${this.nes.getFPS()}`);\n    // }, 1000);\n  };\n\n  stop = () => {\n    this.frameTimer.stop();\n    this.speakers.stop();\n    clearInterval(this.fpsInterval);\n  };\n\n  /*\n   * Fill parent element with screen. Typically called if parent element changes size.\n   */\n  fitInParent() {\n    this.screen.fitInParent();\n  }\n}\n\nEmulator.propTypes = {\n  paused: PropTypes.bool,\n  romData: PropTypes.string.isRequired\n};\n\nexport default Emulator;\n","export const NESGames = [\n  {\n    name: \"热血联盟足球（汉化版）\",\n    // url: '/roms/hotblood-football2.nes'\n    url: './roms/nekketsu_zuqiu3_CHS.nes'\n  },\n  {\n    name: \"热血篮球（汉化版）\",\n    url: './roms/rexuelanqiu.nes'\n  },\n  {\n    name: \"热血格斗传说\",\n    url: './roms/rexuegedou.nes'\n  },\n  {\n    name: \"古巴战争\",\n    url: './roms/GUERRILLA_WAR.nes'\n  },\n  {\n    name: \"魂斗罗\",\n    url: './roms/hundouluo.nes'\n  }\n];\n\n\nexport function loadBinary(path: string, callback: (error: any, data?: any) => void, handleProgress: (progress: Number) => void) {\n  var req = new XMLHttpRequest();\n  req.open(\"GET\", path);\n  req.overrideMimeType(\"text/plain; charset=x-user-defined\");\n  req.onload = function () {\n    if (this.status === 200) {\n      if (req.responseText.match(/^<!doctype html>/i)) {\n        // Got HTML back, so it is probably falling back to index.html due to 404\n        return callback(new Error(\"Page not found\"));\n      }\n\n      callback(null, this.responseText);\n    } else if (this.status === 0) {\n      // Aborted, so ignore error\n    } else {\n      callback(new Error(req.statusText));\n    }\n  };\n  req.onerror = function () {\n    callback(new Error(req.statusText));\n  };\n\n  const progressHandler = (ev: ProgressEvent) => {\n    handleProgress(ev.loaded / ev.total);\n  };\n  req.onprogress = progressHandler;\n  req.send();\n  return req;\n}","import React from 'react';\ndeclare module jsnes { };\n\n// const KEYDOWN = 0x41;\n// const KEYUP = 0x40;\n\nexport enum ControllerKeys {\n    BUTTON_A = 0,\n    BUTTON_B = 1,\n    BUTTON_SELECT = 2,\n    BUTTON_START = 3,\n    BUTTON_UP = 4,\n    BUTTON_DOWN = 5,\n    BUTTON_LEFT = 6,\n    BUTTON_RIGHT = 7,\n};\n\n// class Controller {\n//     state: Number[];\n//     constructor() {\n//         this.state = new Array(8);\n//         this.state.fill(KEYUP);\n//     }\n//     public buttonDown(key: number) {\n//         this.state[key] = 0x41;\n//     }\n\n//     public buttonUp(key: number) {\n//         this.state[key] = 0x40;\n//     }\n// };\n\nexport interface ControllerProps {\n    onKeyDown: (key: number) => void;\n    onkeyUp: (key: number) => void;\n};\n\nenum DirectionStatus {\n    NONE = 0,\n    LEFT = 1 << 1,\n    TOP = 1 << 2,\n    RIGHT = 1 << 3,\n    BOTTOM = 1 << 4,\n    LEFT_TOP = 1 << 5,\n    RIGHT_TOP = 1 << 6,\n    RIGHT_BOTTOM = 1 << 7,\n    LEFT_BOTTOM = 1 << 8\n};\n\nfunction RetriveButtonKeysByStatus(status: number) {\n    let keys: number[] = [];\n    switch (status) {\n        case DirectionStatus.TOP: keys = [ControllerKeys.BUTTON_UP]; break;\n        case DirectionStatus.LEFT: keys = [ControllerKeys.BUTTON_LEFT]; break;\n        case DirectionStatus.BOTTOM: keys = [ControllerKeys.BUTTON_DOWN]; break;\n        case DirectionStatus.RIGHT: keys = [ControllerKeys.BUTTON_RIGHT]; break;\n        case DirectionStatus.LEFT_TOP: keys = [ControllerKeys.BUTTON_LEFT, ControllerKeys.BUTTON_UP]; break;\n        case DirectionStatus.LEFT_BOTTOM: keys = [ControllerKeys.BUTTON_LEFT, ControllerKeys.BUTTON_DOWN]; break;\n        case DirectionStatus.RIGHT_TOP: keys = [ControllerKeys.BUTTON_RIGHT, ControllerKeys.BUTTON_UP]; break;\n        case DirectionStatus.RIGHT_BOTTOM: keys = [ControllerKeys.BUTTON_DOWN, ControllerKeys.BUTTON_RIGHT]; break;\n    }\n    return keys;\n\n}\n\nexport class LeftController extends React.Component<ControllerProps, any> {\n    stick: any;\n    constructor(props: ControllerProps) {\n        super(props);\n        this.state = {\n            currentstatus: 0\n        };\n        this.stick = React.createRef();\n    }\n\n    handleTouchStart(ev: TouchEvent) {\n        if (!this.stick) return;\n        const touch = ev.targetTouches[0];\n        const rect = (this.stick.current as any).getBoundingClientRect();\n        this.dispatchTouchEvent(rect as DOMRect, { x: touch.pageX, y: touch.pageY });\n        ev.preventDefault();\n    };\n\n    handleTouchMove(ev: TouchEvent) {\n        if (!this.stick.current) return;\n        const touch = ev.targetTouches[0];\n        const rect = (this.stick.current as any).getBoundingClientRect();\n        this.dispatchTouchEvent(rect as DOMRect, { x: touch.pageX, y: touch.pageY });\n        ev.preventDefault();\n    };\n\n    handleTouchEnd(ev: TouchEvent) {\n        // console.log(ev);\n        // if (!this.stick.current) return;\n        // const touch = ev.targetTouches[0];\n        // const rect = (this.stick.current as any).getBoundingClientRect();\n        // this.dispatchTouchEvent(rect as DOMRect, { x: touch.pageX, y: touch.pageY });\n        const keys = RetriveButtonKeysByStatus(this.state.currentStatus);\n        keys.forEach(k => this.props.onkeyUp(k));\n        this.setState({\n            currentStatus: DirectionStatus.NONE\n        })\n        ev.preventDefault();\n    };\n\n\n    dispatchTouchEvent(rect: DOMRect, touchPoint: { x: number, y: number }) {\n        const midX = (rect.left + rect.right) / 2;\n        const midY = (rect.top + rect.bottom) / 2;\n        let nextStatus = DirectionStatus.NONE;\n        if (touchPoint.x < (midX - 22)) {\n            if (touchPoint.y < (midY - 22)) {\n                nextStatus = DirectionStatus.LEFT_TOP;\n            } else if (touchPoint.y >= (midY - 22) && touchPoint.y < (midY + 22)) {\n                nextStatus = DirectionStatus.LEFT;\n            } else if (touchPoint.y >= (midY + 22)) {\n                nextStatus = DirectionStatus.LEFT_BOTTOM;\n            }\n        } else if (touchPoint.x >= (midX - 22) && touchPoint.x < (midX + 22)) {\n            if (touchPoint.y < (midY - 22)) {\n                nextStatus = DirectionStatus.TOP;\n            } else if (touchPoint.y >= (midY - 22) && touchPoint.y < (midY + 22)) {\n            } else if (touchPoint.y >= (midY + 22)) {\n                nextStatus = DirectionStatus.BOTTOM;\n            }\n        } else if (touchPoint.x >= (midX + 22)) {\n            if (touchPoint.y < (midY - 22)) {\n                nextStatus = DirectionStatus.RIGHT_TOP;\n            } else if (touchPoint.y >= (midY - 22) && touchPoint.y < (midY + 22)) {\n                nextStatus = DirectionStatus.RIGHT;\n            } else if (touchPoint.y >= (midY + 22)) {\n                nextStatus = DirectionStatus.RIGHT_BOTTOM;\n            }\n        }\n        if (this.state.currentStatus !== nextStatus) {\n            this.changeControllerDirection(nextStatus);\n        }\n    };\n\n    changeControllerDirection(direction: number) {\n        const keys = RetriveButtonKeysByStatus(this.state.currentStatus);\n        const newKeys = RetriveButtonKeysByStatus(direction);\n\n        keys.forEach(k => {\n            if (newKeys.indexOf(k) < 0) {\n                this.props.onkeyUp(k);\n            }\n        });\n\n        newKeys.forEach(k => {\n            if (keys.indexOf(k) < 0) {\n                this.props.onKeyDown(k);\n            }\n        });\n\n        this.setState({\n            currentStatus: direction\n        })\n    };\n\n    componentDidMount() {\n        const container = document.getElementById('arrow-controls');\n        container?.addEventListener('touchstart', this.handleTouchStart.bind(this), false);\n        container?.addEventListener('touchmove', this.handleTouchMove.bind(this), false);\n        container?.addEventListener('touchend', this.handleTouchEnd.bind(this), false);\n    }\n\n    componentWillUnmount() {\n        const container = document.getElementById('arrow-controls');\n        container?.removeEventListener('touchstart', this.handleTouchStart, false);\n        container?.removeEventListener('touchmove', this.handleTouchMove, false);\n        container?.removeEventListener('touchend', this.handleTouchEnd, false);\n    }\n\n    render() {\n        return (\n            <div id=\"left-controller\">\n                <div className=\"option-controls\">\n                    <div id=\"control-select\" className=\"gamepad\" onClick={\n                        e => {\n                            this.props.onKeyDown(ControllerKeys.BUTTON_SELECT);\n                            setTimeout(() => {\n                                this.props.onkeyUp(ControllerKeys.BUTTON_SELECT);\n                            }, 50);\n                            e.preventDefault();\n                        }\n                    }></div>\n                </div>\n                <div className=\"arrow-controls\" id=\"arrow-controls\" ref={this.stick}>\n                    <div className=\"arrow-top\">\n                        {/* top */}\n                        <div id=\"control-top\" className=\"gamepad\"></div>\n                    </div>\n                    <div className=\"arrow-left-right\">\n                        {/* left */}\n                        <div id=\"control-left\" className=\"gamepad\"></div>\n                        {/* right */}\n                        <div id=\"control-right\" className=\"gamepad\"></div>\n                    </div>\n                    <div className=\"arrow-down\">\n                        {/* down */}\n                        <div id=\"control-down\" className=\"gamepad\"></div>\n                    </div>\n                </div>\n                <div className=\"option-controls\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class RightController extends React.Component<ControllerProps, any> {\n\n    buttonA: any;\n    buttonB: any;\n    buttonC: any;\n    constructor(props: ControllerProps) {\n        super(props);\n        this.buttonA = React.createRef();\n        this.buttonB = React.createRef();\n        this.buttonC = React.createRef();\n        this.state = {\n            currentStatus: 0\n        };\n    }\n\n    handleTouchStart(ev: TouchEvent) {\n        const touch = ev.targetTouches[0];\n        // const rect = (this.stick.current as any).getBoundingClientRect();\n        this.dispatchTouchEvent({ x: touch.pageX, y: touch.pageY });\n        ev.preventDefault();\n    };\n\n    handleTouchMove(ev: TouchEvent) {\n        const touch = ev.targetTouches[0];\n        this.dispatchTouchEvent({ x: touch.pageX, y: touch.pageY });\n        ev.preventDefault();\n    };\n\n    handleTouchEnd(ev: TouchEvent) {\n        // const touch = ev.changedTouches[0];\n        // this.dispatchTouchEvent({ x: touch.pageX, y: touch.pageY });\n        if (this.state.currentStatus > 0) {\n            const ks = this.keysForStatus(this.state.currentStatus);\n            ks.forEach(k => this.props.onkeyUp(k));\n            this.setState({\n                currentStatus: 0\n            })\n        }\n        ev.preventDefault();\n    };\n\n    rectContainsPoint(rect: DOMRect, point: {x: number, y: number}) {\n        return point.x >= rect.left && point.x <= rect.right && point.y >= rect.top && point.y <= rect.bottom;\n    }\n\n    dispatchTouchEvent(point: {x: number, y: number}) {\n        if (!this.buttonA.current || !this.buttonB.current || !this.buttonC.current) return;\n        const rectA = this.buttonA.current.getBoundingClientRect() as DOMRect;\n        const rectB = this.buttonB.current.getBoundingClientRect() as DOMRect;\n        const rectC = this.buttonC.current.getBoundingClientRect() as DOMRect;\n        let nextStatus = 0;\n        if (this.rectContainsPoint(rectA, point)) {\n            // key = [ControllerKeys.BUTTON_A];\n            nextStatus = 1;\n        } else if (this.rectContainsPoint(rectB, point)) {\n            // key = [ControllerKeys.BUTTON_B];\n            nextStatus = 2;\n        } else if (this.rectContainsPoint(rectC, point)) {\n            // key = [ControllerKeys.BUTTON_A, ControllerKeys.BUTTON_B];\n            nextStatus = 3;\n        }\n        if (nextStatus !== this.state.currentStatus) {\n            const ks = this.keysForStatus(nextStatus);\n            ks.forEach(k => this.props.onKeyDown(k));\n            this.setState({\n                currentStatus: nextStatus\n            });\n        }\n    }\n\n    keysForStatus(s: number) {\n        switch(s) {\n            case 1: return [ControllerKeys.BUTTON_A];\n            case 2: return [ControllerKeys.BUTTON_B];\n            case 3: return [ControllerKeys.BUTTON_A, ControllerKeys.BUTTON_B]\n        }\n        return [];\n    }\n\n    componentDidMount() {\n        const container = document.getElementById('action-controls');\n        container?.addEventListener('touchstart', this.handleTouchStart.bind(this), false);\n        container?.addEventListener('touchmove', this.handleTouchMove.bind(this), false);\n        container?.addEventListener('touchend', this.handleTouchEnd.bind(this), false);\n    }\n\n    componentWillUnmount() {\n        const container = document.getElementById('action-controls');\n        container?.removeEventListener('touchstart', this.handleTouchStart, false);\n        container?.removeEventListener('touchmove', this.handleTouchMove, false);\n        container?.removeEventListener('touchend', this.handleTouchEnd, false);\n    }\n\n    render() {\n        return (\n            <div id=\"right-controller\">\n                <div className=\"option-controls\" style={{justifyContent: 'flex-start'}}>\n                    <div id=\"control-start\" className=\"gamepad\" onClick={e => {\n                        this.props.onKeyDown(ControllerKeys.BUTTON_START);\n                        setTimeout(() => {\n                            this.props.onkeyUp(ControllerKeys.BUTTON_START);\n                        }, 50);\n                        e.preventDefault();\n                    }}></div>\n                </div>\n                <div className=\"arrow-controls\" id=\"action-controls\" style={{justifyContent: 'space-around'}}>\n                    <div className=\"arrow-top\">\n                        <div id=\"control-ab\" className=\"gamepad\" ref={this.buttonC}\n                        // onClick={e => {\n                        //     this.props.onKeyDown(ControllerKeys.BUTTON_A);\n                        //     this.props.onKeyDown(ControllerKeys.BUTTON_B);\n                        //     setTimeout(() => {\n                        //         this.props.onkeyUp(ControllerKeys.BUTTON_A);\n                        //         this.props.onkeyUp(ControllerKeys.BUTTON_B);\n                        //     }, 50);\n                        //     e.preventDefault();\n                        // }}\n                        ></div>\n                    </div>\n                    <div className=\"arrow-top\" style={{justifyContent: 'space-around'}}>\n                    <div id=\"control-b\" className=\"gamepad\"  ref={this.buttonB}\n                    // onClick={e => {\n                    //     this.props.onKeyDown(ControllerKeys.BUTTON_B);\n                    //     setTimeout(() => {\n                    //         this.props.onkeyUp(ControllerKeys.BUTTON_B);\n                    //     }, 50);\n                    //     e.preventDefault();\n                    // }}\n                    ></div>\n                    <div id=\"control-a\" className=\"gamepad\" ref={this.buttonA}\n                    // onClick={e => {\n                    //     this.props.onKeyDown(ControllerKeys.BUTTON_A);\n                    //     setTimeout(() => {\n                    //         this.props.onkeyUp(ControllerKeys.BUTTON_A);\n                    //     }, 50);\n                    //     e.preventDefault();\n                    // }}\n                    ></div>\n                    </div>\n                </div>\n                <div className=\"option-controls\"></div>\n            </div>\n        );\n    }\n}\n\nconst KeyboardMap = [75,74,84, 89, 87, 83, 65, 68];\n\nexport function EnableKeyboardController() {\n    window.onkeydown = (ev: KeyboardEvent) => {\n        const target = KeyboardMap.indexOf(ev.keyCode);\n        if (target < 0) return;\n        if ((window as any).nes) {\n            (window as any).nes.buttonDown(1, target);\n        }\n    };\n\n    window.onkeyup = (ev: KeyboardEvent) => {\n        const target = KeyboardMap.indexOf(ev.keyCode);\n        if (target < 0) return;\n        if ((window as any).nes) {\n            (window as any).nes.buttonUp(1, target);\n        }\n    };\n}","import React, { useState, useEffect, useRef } from 'react';\nimport Emulator from './nesweb/Emulator';\nimport { NESGames, loadBinary } from './GameRoms';\nimport './App.css';\nimport { LeftController, RightController } from './GameController';\n\nfunction App() {\n  const [romData, setRomData] = useState(null);\n  const [url, setUrl] = useState('');\n  const emulator = useRef(null);\n\n  useEffect(() => {\n    if (url.length === 0) return;\n    loadBinary(url, (e, data) => {\n      if (data) {\n        setRomData(data);\n      }\n    }, progress => {\n      console.log(progress);\n    });\n  }, [url]);\n\n  const handleKeyDown = (k: number) => {\n    console.log('keydown', k);\n    if ((window as any).nes) {\n      (window as any).nes.buttonDown(1, k);\n    }\n  }\n\n  const handleKeyUp = (k: number) => {\n    console.log('keyup', k);\n    if ((window as any).nes) {\n      (window as any).nes.buttonUp(1, k);\n    }\n  }\n\n  // if (!romData) {\n  //   return (<div className=\"App\"></div>)\n  // }\n  return (\n    <div className=\"App\">\n      <LeftController onKeyDown={k => handleKeyDown(k)} onkeyUp={k => handleKeyUp(k)} />\n      <div id=\"monitor\">\n        { romData ? <Emulator romData={romData} ref={emulator}/> : <GameList onselect={ url => setUrl(url)}/> }\n      </div>\n      <div id=\"right-controller\">\n        <RightController onKeyDown={k => handleKeyDown(k)} onkeyUp={k => handleKeyUp(k)} />\n      </div>\n    </div>\n  );\n}\n\n\nfunction GameList(props: { onselect: (url: string) => void}) {\n  return (\n    <div className=\"game-list\" onClick={e => {\n      const url = (e.target as any).getAttribute('data-key');\n      if (!url) return;\n      props.onselect(url);\n      if (!(window as any).audioContext) {\n        const AudioContext = window.AudioContext || (window as any).webkitAudioContext;\n        (window as any).audioContext = new AudioContext();\n        (window as any).audioContext.resume();\n      }\n    }}>\n      {NESGames.map(game => {\n        return (\n          <div className=\"game\" key={game.url} data-key={game.url}>{game.name}</div>\n        );\n      })}\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { EnableKeyboardController } from './GameController';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nEnableKeyboardController();"],"sourceRoot":""}